openapi: 3.0.3
info:
  title: Online Product Listing
  description: ping pong
  termsOfService: https://no.terms.yet
  contact:
    email: ankur.vatsa@gmail.com
  license:
    name: GNU GPLv3
    url: https://github.com/manil-007/OnlineProductListing/blob/main/LICENSE.md
  version: 1.0.0
externalDocs:
  description: README.md
  url: https://github.com/manil-007/OnlineProductListing/blob/main/README.md
servers:
  - url: /api/v1
paths:
  /ping:
    get:
      summary: Health check url
      description: Check if the api system is alive and kicking
      operationId: controllers.controllers.ping
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
            default: vatsaaa
            description: Pong to ping
      tags:
        - Health check
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
  /run:
    get:
      summary: run get
      description: run get
      operationId: controllers.controllers.run
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
            default: vatsaaa
            description: run get
      tags:
        - run get
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
        '405':
          description: Validation exception
    post:
      tags:
        - run post
      summary: Search and get data
      description: Search and get data
      operationId: controllers.controllers.run_post
      requestBody:
        description: Seach and get data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTerm'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchTerm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SearchTerm'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTerm'          
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchTerm'
        '405':
          description: Invalid input
  /extract_keywords:
    post:
      tags:
        - extract keywords
      summary: Extract keywords from given text
      description: Extract keywords from given text
      operationId: controllers.controllers.extract_keywords
      requestBody:
        description: Text from which keywords need to be extracted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeywordsText'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeywordsText'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeywordsText'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordsText'          
            application/xml:
              schema:
                $ref: '#/components/schemas/KeywordsText'
        '405':
          description: Invalid input

components:
  schemas:
    SearchTerm:
      required:
        - search_string
        - num_of_products
      type: object
      properties:
        search_string:
          type: string
          example: Essential Oils; Garam Masala
        num_of_products:
          type: integer
          format: int64
          example: 10
    KeywordsText:
      required:
        - keywords_text
      type: object
      properties:
        keywords_text:
          type: string
          example: "Pure Source India Aroma Diffuser..."